Filename : README
*****************


1) Introduction
---------------

This package implements a basic Lexical Analyser (aka Lexer, Scanner, or Tokeniser). The bulk of the
Lexical Analyser is implemented in the C programming language by the GNU Flex program, whilst the
rest of it is implemented using the C++ programming language.

Don't let the above description confuse you! It doesn't mean that the Lexical Analyser can only be
used to recognise C and/or C++ source code. It means only what it says - and that is that the
Lexical Analyser was implemented using the C and C++ programming languages.


2) How to process this package
------------------------------

This package is designed to be processed by the GNU Autotools suite of tools, and the remainder of
this file will explain how to do just that. Processing the package in the manner described below,
will cause it to become a GNU Autotools project.

To begin the process of turning this package into a GNU Autotools package, cd to the directory
which contains this file, and then execute the following two commands ;

  > libtoolize
  > autoreconf

The autoreconf command may complain that a number of required files cannot be found. However,
don't worry about this, because the autoreconf command also informs us that this problem can be
rectified by executing the command ;

  automake --add-missing

Execute this command, and if it is successful, then execute thr autoreconf command one more time.

If all of these commands executed successfully, then the package should now be setup as a GNU
Autotools project. If this is indeed the case, then a file called configure should have been created
in the same directory as this file.


3) What to do next
------------------

Read the INSTALL file for instructions on how to use this configure script. It will explain how to
configure, build, and then install the Lexical Analyser and any of its associated files.
